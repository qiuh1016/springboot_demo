<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cetcme.springBootDemo.mapper.DictMapper">
  <resultMap id="BaseResultMap" type="com.cetcme.springBootDemo.domain.Dict">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DICT_ID" jdbcType="BIGINT" property="dictId" />
    <result column="DICT_TYPE" jdbcType="VARCHAR" property="dictType" />
    <result column="DICT_CODE" jdbcType="VARCHAR" property="dictCode" />
    <result column="DICT_VALUE" jdbcType="VARCHAR" property="dictValue" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
    <result column="CREATE_USER_ID" jdbcType="BIGINT" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_USER_ID" jdbcType="BIGINT" property="updateUserId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="DEL_FLAG" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `DICT_ID`, `DICT_TYPE`, `DICT_CODE`, `DICT_VALUE`, `MEMO`, `CREATE_USER_ID`, `CREATE_TIME`, 
    `UPDATE_USER_ID`, `UPDATE_TIME`, `DEL_FLAG`
  </sql>
  <select id="selectByExample" parameterType="com.cetcme.springBootDemo.domain.DictExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from `t_dict`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `t_dict`
    where `DICT_ID` = #{dictId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `t_dict`
    where `DICT_ID` = #{dictId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cetcme.springBootDemo.domain.Dict">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `t_dict` (`DICT_ID`, `DICT_TYPE`, `DICT_CODE`, 
      `DICT_VALUE`, `MEMO`, `CREATE_USER_ID`, 
      `CREATE_TIME`, `UPDATE_USER_ID`, `UPDATE_TIME`, 
      `DEL_FLAG`)
    values (#{dictId,jdbcType=BIGINT}, #{dictType,jdbcType=VARCHAR}, #{dictCode,jdbcType=VARCHAR}, 
      #{dictValue,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.cetcme.springBootDemo.domain.Dict">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `t_dict`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        `DICT_ID`,
      </if>
      <if test="dictType != null">
        `DICT_TYPE`,
      </if>
      <if test="dictCode != null">
        `DICT_CODE`,
      </if>
      <if test="dictValue != null">
        `DICT_VALUE`,
      </if>
      <if test="memo != null">
        `MEMO`,
      </if>
      <if test="createUserId != null">
        `CREATE_USER_ID`,
      </if>
      <if test="createTime != null">
        `CREATE_TIME`,
      </if>
      <if test="updateUserId != null">
        `UPDATE_USER_ID`,
      </if>
      <if test="updateTime != null">
        `UPDATE_TIME`,
      </if>
      <if test="delFlag != null">
        `DEL_FLAG`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        #{dictId,jdbcType=BIGINT},
      </if>
      <if test="dictType != null">
        #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="dictCode != null">
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cetcme.springBootDemo.domain.Dict">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `t_dict`
    <set>
      <if test="dictType != null">
        `DICT_TYPE` = #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="dictCode != null">
        `DICT_CODE` = #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        `DICT_VALUE` = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        `MEMO` = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        `CREATE_USER_ID` = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        `UPDATE_USER_ID` = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        `DEL_FLAG` = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where `DICT_ID` = #{dictId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cetcme.springBootDemo.domain.Dict">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `t_dict`
    set `DICT_TYPE` = #{dictType,jdbcType=VARCHAR},
      `DICT_CODE` = #{dictCode,jdbcType=VARCHAR},
      `DICT_VALUE` = #{dictValue,jdbcType=VARCHAR},
      `MEMO` = #{memo,jdbcType=VARCHAR},
      `CREATE_USER_ID` = #{createUserId,jdbcType=BIGINT},
      `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP},
      `UPDATE_USER_ID` = #{updateUserId,jdbcType=BIGINT},
      `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP},
      `DEL_FLAG` = #{delFlag,jdbcType=BIT}
    where `DICT_ID` = #{dictId,jdbcType=BIGINT}
  </update>
</mapper>