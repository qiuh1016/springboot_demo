<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cetcme.springBootDemo.mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="com.cetcme.springBootDemo.domain.Device">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DEVICE_ID" jdbcType="BIGINT" property="deviceId" />
    <result column="DEVICE_NO" jdbcType="CHAR" property="deviceNo" />
    <result column="IDCARDREADER_NO" jdbcType="CHAR" property="idcardreaderNo" />
    <result column="PAIR_FLAG" jdbcType="BIT" property="pairFlag" />
    <result column="OFFLINE_FLAG" jdbcType="BIT" property="offlineFlag" />
    <result column="FENCE_ID" jdbcType="BIGINT" property="fenceId" />
    <result column="ALTITUDE" jdbcType="DOUBLE" property="altitude" />
    <result column="HDOP" jdbcType="DOUBLE" property="hdop" />
    <result column="SATELLITE_CNT" jdbcType="INTEGER" property="satelliteCnt" />
    <result column="SKEW_X" jdbcType="INTEGER" property="skewX" />
    <result column="SKEW_Y" jdbcType="INTEGER" property="skewY" />
    <result column="SKEW_Z" jdbcType="INTEGER" property="skewZ" />
    <result column="TRANSMIT_FREQ" jdbcType="INTEGER" property="transmitFreq" />
    <result column="TRANSMIT_DIST" jdbcType="INTEGER" property="transmitDist" />
    <result column="RECORD_FREQ" jdbcType="INTEGER" property="recordFreq" />
    <result column="RECORD_DIST" jdbcType="INTEGER" property="recordDist" />
    <result column="CREATE_USER_ID" jdbcType="BIGINT" property="createUserId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_USER_ID" jdbcType="BIGINT" property="updateUserId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="BOOT_UPDATE_TIME" jdbcType="TIMESTAMP" property="bootUpdateTime" />
    <result column="DEL_FLAG" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `DEVICE_ID`, `DEVICE_NO`, `IDCARDREADER_NO`, `PAIR_FLAG`, `OFFLINE_FLAG`, `FENCE_ID`, 
    `ALTITUDE`, `HDOP`, `SATELLITE_CNT`, `SKEW_X`, `SKEW_Y`, `SKEW_Z`, `TRANSMIT_FREQ`, 
    `TRANSMIT_DIST`, `RECORD_FREQ`, `RECORD_DIST`, `CREATE_USER_ID`, `CREATE_TIME`, `UPDATE_USER_ID`, 
    `UPDATE_TIME`, `BOOT_UPDATE_TIME`, `DEL_FLAG`
  </sql>
  <select id="selectByExample" parameterType="com.cetcme.springBootDemo.domain.DeviceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from `t_device`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `t_device`
    where `DEVICE_ID` = #{deviceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `t_device`
    where `DEVICE_ID` = #{deviceId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cetcme.springBootDemo.domain.Device">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="deviceId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `t_device` (`DEVICE_NO`, `IDCARDREADER_NO`, `PAIR_FLAG`, 
      `OFFLINE_FLAG`, `FENCE_ID`, `ALTITUDE`, 
      `HDOP`, `SATELLITE_CNT`, `SKEW_X`, 
      `SKEW_Y`, `SKEW_Z`, `TRANSMIT_FREQ`, 
      `TRANSMIT_DIST`, `RECORD_FREQ`, `RECORD_DIST`, 
      `CREATE_USER_ID`, `CREATE_TIME`, `UPDATE_USER_ID`, 
      `UPDATE_TIME`, `DEL_FLAG`)
    values (#{deviceNo,jdbcType=CHAR}, #{idcardreaderNo,jdbcType=CHAR}, #{pairFlag,jdbcType=BIT}, 
      #{offlineFlag,jdbcType=BIT}, #{fenceId,jdbcType=BIGINT}, #{altitude,jdbcType=DOUBLE}, 
      #{hdop,jdbcType=DOUBLE}, #{satelliteCnt,jdbcType=INTEGER}, #{skewX,jdbcType=INTEGER}, 
      #{skewY,jdbcType=INTEGER}, #{skewZ,jdbcType=INTEGER}, #{transmitFreq,jdbcType=INTEGER}, 
      #{transmitDist,jdbcType=INTEGER}, #{recordFreq,jdbcType=INTEGER}, #{recordDist,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.cetcme.springBootDemo.domain.Device">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="deviceId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `t_device`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deviceNo != null">
        `DEVICE_NO`,
      </if>
      <if test="idcardreaderNo != null">
        `IDCARDREADER_NO`,
      </if>
      <if test="pairFlag != null">
        `PAIR_FLAG`,
      </if>
      <if test="offlineFlag != null">
        `OFFLINE_FLAG`,
      </if>
      <if test="fenceId != null">
        `FENCE_ID`,
      </if>
      <if test="altitude != null">
        `ALTITUDE`,
      </if>
      <if test="hdop != null">
        `HDOP`,
      </if>
      <if test="satelliteCnt != null">
        `SATELLITE_CNT`,
      </if>
      <if test="skewX != null">
        `SKEW_X`,
      </if>
      <if test="skewY != null">
        `SKEW_Y`,
      </if>
      <if test="skewZ != null">
        `SKEW_Z`,
      </if>
      <if test="transmitFreq != null">
        `TRANSMIT_FREQ`,
      </if>
      <if test="transmitDist != null">
        `TRANSMIT_DIST`,
      </if>
      <if test="recordFreq != null">
        `RECORD_FREQ`,
      </if>
      <if test="recordDist != null">
        `RECORD_DIST`,
      </if>
      <if test="createUserId != null">
        `CREATE_USER_ID`,
      </if>
      <if test="createTime != null">
        `CREATE_TIME`,
      </if>
      <if test="updateUserId != null">
        `UPDATE_USER_ID`,
      </if>
      <if test="updateTime != null">
        `UPDATE_TIME`,
      </if>
      <if test="delFlag != null">
        `DEL_FLAG`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deviceNo != null">
        #{deviceNo,jdbcType=CHAR},
      </if>
      <if test="idcardreaderNo != null">
        #{idcardreaderNo,jdbcType=CHAR},
      </if>
      <if test="pairFlag != null">
        #{pairFlag,jdbcType=BIT},
      </if>
      <if test="offlineFlag != null">
        #{offlineFlag,jdbcType=BIT},
      </if>
      <if test="fenceId != null">
        #{fenceId,jdbcType=BIGINT},
      </if>
      <if test="altitude != null">
        #{altitude,jdbcType=DOUBLE},
      </if>
      <if test="hdop != null">
        #{hdop,jdbcType=DOUBLE},
      </if>
      <if test="satelliteCnt != null">
        #{satelliteCnt,jdbcType=INTEGER},
      </if>
      <if test="skewX != null">
        #{skewX,jdbcType=INTEGER},
      </if>
      <if test="skewY != null">
        #{skewY,jdbcType=INTEGER},
      </if>
      <if test="skewZ != null">
        #{skewZ,jdbcType=INTEGER},
      </if>
      <if test="transmitFreq != null">
        #{transmitFreq,jdbcType=INTEGER},
      </if>
      <if test="transmitDist != null">
        #{transmitDist,jdbcType=INTEGER},
      </if>
      <if test="recordFreq != null">
        #{recordFreq,jdbcType=INTEGER},
      </if>
      <if test="recordDist != null">
        #{recordDist,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cetcme.springBootDemo.domain.DeviceExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from `t_device`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `t_device`
    <set>
      <if test="record.deviceId != null">
        `DEVICE_ID` = #{record.deviceId,jdbcType=BIGINT},
      </if>
      <if test="record.deviceNo != null">
        `DEVICE_NO` = #{record.deviceNo,jdbcType=CHAR},
      </if>
      <if test="record.idcardreaderNo != null">
        `IDCARDREADER_NO` = #{record.idcardreaderNo,jdbcType=CHAR},
      </if>
      <if test="record.pairFlag != null">
        `PAIR_FLAG` = #{record.pairFlag,jdbcType=BIT},
      </if>
      <if test="record.offlineFlag != null">
        `OFFLINE_FLAG` = #{record.offlineFlag,jdbcType=BIT},
      </if>
      <if test="record.outtimeFlag != null">
        `OUTTIME_FLAG` = #{record.outtimeFlag,jdbcType=BIT},
      </if>
      <if test="record.fenceId != null">
        `FENCE_ID` = #{record.fenceId,jdbcType=BIGINT},
      </if>
      <if test="record.altitude != null">
        `ALTITUDE` = #{record.altitude,jdbcType=DOUBLE},
      </if>
      <if test="record.hdop != null">
        `HDOP` = #{record.hdop,jdbcType=DOUBLE},
      </if>
      <if test="record.satelliteCnt != null">
        `SATELLITE_CNT` = #{record.satelliteCnt,jdbcType=INTEGER},
      </if>
      <if test="record.skewX != null">
        `SKEW_X` = #{record.skewX,jdbcType=INTEGER},
      </if>
      <if test="record.skewY != null">
        `SKEW_Y` = #{record.skewY,jdbcType=INTEGER},
      </if>
      <if test="record.skewZ != null">
        `SKEW_Z` = #{record.skewZ,jdbcType=INTEGER},
      </if>
      <if test="record.transmitFreq != null">
        `TRANSMIT_FREQ` = #{record.transmitFreq,jdbcType=INTEGER},
      </if>
      <if test="record.transmitDist != null">
        `TRANSMIT_DIST` = #{record.transmitDist,jdbcType=INTEGER},
      </if>
      <if test="record.recordFreq != null">
        `RECORD_FREQ` = #{record.recordFreq,jdbcType=INTEGER},
      </if>
      <if test="record.recordDist != null">
        `RECORD_DIST` = #{record.recordDist,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null">
        `CREATE_USER_ID` = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        `UPDATE_USER_ID` = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bootUpdateTime != null">
        `BOOT_UPDATE_TIME` = #{record.bootUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        `DEL_FLAG` = #{record.delFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `t_device`
    set `DEVICE_ID` = #{record.deviceId,jdbcType=BIGINT},
      `DEVICE_NO` = #{record.deviceNo,jdbcType=CHAR},
      `IDCARDREADER_NO` = #{record.idcardreaderNo,jdbcType=CHAR},
      `PAIR_FLAG` = #{record.pairFlag,jdbcType=BIT},
      `OFFLINE_FLAG` = #{record.offlineFlag,jdbcType=BIT},
      `FENCE_ID` = #{record.fenceId,jdbcType=BIGINT},
      `ALTITUDE` = #{record.altitude,jdbcType=DOUBLE},
      `HDOP` = #{record.hdop,jdbcType=DOUBLE},
      `SATELLITE_CNT` = #{record.satelliteCnt,jdbcType=INTEGER},
      `SKEW_X` = #{record.skewX,jdbcType=INTEGER},
      `SKEW_Y` = #{record.skewY,jdbcType=INTEGER},
      `SKEW_Z` = #{record.skewZ,jdbcType=INTEGER},
      `TRANSMIT_FREQ` = #{record.transmitFreq,jdbcType=INTEGER},
      `TRANSMIT_DIST` = #{record.transmitDist,jdbcType=INTEGER},
      `RECORD_FREQ` = #{record.recordFreq,jdbcType=INTEGER},
      `RECORD_DIST` = #{record.recordDist,jdbcType=INTEGER},
      `CREATE_USER_ID` = #{record.createUserId,jdbcType=BIGINT},
      `CREATE_TIME` = #{record.createTime,jdbcType=TIMESTAMP},
      `UPDATE_USER_ID` = #{record.updateUserId,jdbcType=BIGINT},
      `UPDATE_TIME` = #{record.updateTime,jdbcType=TIMESTAMP},
      `DEL_FLAG` = #{record.delFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cetcme.springBootDemo.domain.Device">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `t_device`
    <set>
      <if test="deviceNo != null">
        `DEVICE_NO` = #{deviceNo,jdbcType=CHAR},
      </if>
      <if test="idcardreaderNo != null">
        `IDCARDREADER_NO` = #{idcardreaderNo,jdbcType=CHAR},
      </if>
      <if test="pairFlag != null">
        `PAIR_FLAG` = #{pairFlag,jdbcType=BIT},
      </if>
      <if test="offlineFlag != null">
        `OFFLINE_FLAG` = #{offlineFlag,jdbcType=BIT},
      </if>
      <if test="fenceId != null">
        `FENCE_ID` = #{fenceId,jdbcType=BIGINT},
      </if>
      <if test="altitude != null">
        `ALTITUDE` = #{altitude,jdbcType=DOUBLE},
      </if>
      <if test="hdop != null">
        `HDOP` = #{hdop,jdbcType=DOUBLE},
      </if>
      <if test="satelliteCnt != null">
        `SATELLITE_CNT` = #{satelliteCnt,jdbcType=INTEGER},
      </if>
      <if test="skewX != null">
        `SKEW_X` = #{skewX,jdbcType=INTEGER},
      </if>
      <if test="skewY != null">
        `SKEW_Y` = #{skewY,jdbcType=INTEGER},
      </if>
      <if test="skewZ != null">
        `SKEW_Z` = #{skewZ,jdbcType=INTEGER},
      </if>
      <if test="transmitFreq != null">
        `TRANSMIT_FREQ` = #{transmitFreq,jdbcType=INTEGER},
      </if>
      <if test="transmitDist != null">
        `TRANSMIT_DIST` = #{transmitDist,jdbcType=INTEGER},
      </if>
      <if test="recordFreq != null">
        `RECORD_FREQ` = #{recordFreq,jdbcType=INTEGER},
      </if>
      <if test="recordDist != null">
        `RECORD_DIST` = #{recordDist,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        `CREATE_USER_ID` = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        `UPDATE_USER_ID` = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        `DEL_FLAG` = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where `DEVICE_ID` = #{deviceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cetcme.springBootDemo.domain.Device">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `t_device`
    set `DEVICE_NO` = #{deviceNo,jdbcType=CHAR},
      `IDCARDREADER_NO` = #{idcardreaderNo,jdbcType=CHAR},
      `PAIR_FLAG` = #{pairFlag,jdbcType=BIT},
      `OFFLINE_FLAG` = #{offlineFlag,jdbcType=BIT},
      `FENCE_ID` = #{fenceId,jdbcType=BIGINT},
      `ALTITUDE` = #{altitude,jdbcType=DOUBLE},
      `HDOP` = #{hdop,jdbcType=DOUBLE},
      `SATELLITE_CNT` = #{satelliteCnt,jdbcType=INTEGER},
      `SKEW_X` = #{skewX,jdbcType=INTEGER},
      `SKEW_Y` = #{skewY,jdbcType=INTEGER},
      `SKEW_Z` = #{skewZ,jdbcType=INTEGER},
      `TRANSMIT_FREQ` = #{transmitFreq,jdbcType=INTEGER},
      `TRANSMIT_DIST` = #{transmitDist,jdbcType=INTEGER},
      `RECORD_FREQ` = #{recordFreq,jdbcType=INTEGER},
      `RECORD_DIST` = #{recordDist,jdbcType=INTEGER},
      `CREATE_USER_ID` = #{createUserId,jdbcType=BIGINT},
      `CREATE_TIME` = #{createTime,jdbcType=TIMESTAMP},
      `UPDATE_USER_ID` = #{updateUserId,jdbcType=BIGINT},
      `UPDATE_TIME` = #{updateTime,jdbcType=TIMESTAMP},
      `DEL_FLAG` = #{delFlag,jdbcType=BIT}
    where `DEVICE_ID` = #{deviceId,jdbcType=BIGINT}
  </update>
</mapper>